args:
artifacts:
  - name: authorized_keys
    type: query
    description: "Collect authorized_keys artifacts"
    queries:
      - "select * from authorized_keys"

  - name: process_list
    type: query
    description: "List all runing processes"
    queries:
      - "select cmdline,cwd,disk_bytes_read,disk_bytes_written,egid,euid,gid,name,nice,on_disk,parent,processes.path,md5,pgroup,pid,resident_size,root,sgid,start_time,state,suid,system_time,threads,total_size,uid,user_time,wired_size from processes JOIN hash USING (path)"
    maps:
      - from: start_time
        to: "@timestamp"
        modifier:
          name: epoch_to_iso

  - name: startup_items
    type: query
    description: "Collect startup items"
    queries:
      - "select * from startup_items"

  - name: sudoers
    type: query
    description: "Collect rules for the sudoers"
    queries:
      - "select * from sudoers"

  - name: suid_bin
    type: query
    description: "Get information about executables with SUID set"
    queries:
      - "SELECT path,md5,username,groupname,permissions FROM suid_bin JOIN hash USING (path)"

  - name: system_info
    type: query
    description: "Get general information about system"
    queries:
      - "select * from system_info"

  - name: users
    type: query
    description: "List all local users"
    queries:
      - "select * from groups join user_groups using (gid) join users using (uid)"

  - name: groups
    type: query
    description: "List all local groups"
    queries:
      - "select * from groups"

  - name: arp_cache
    type: query
    description: "Get arp table cache"
    queries:
      - "select * from arp_cache"

  - name: crontab
    type: query
    description: "Get crontab for system and all users"
    queries:
      - "select * from crontab"

  - name: apps
    type: query
    description: "macOS applications installed in known search paths (e.g., /Applications)"
    queries:
      - "select * from apps"
    maps:
      - from: last_opened_time
        to: "@timestamp"
        modifier:
          name: datetime_to_iso
          parameters:
            input_time_format: "%s.%f"

  - name: file_list
    type: query
    description: "Get metadata for files on system"
    queries:
      - 'select * from file where path like "/Users/%%"'
      - 'select * from file where path like "/root/%%"'
      - 'select * from file where path like "/media/%%"'
      - 'select * from file where path like "/var/%%"'
      - 'select * from file where path like "/etc/%%"'
      - 'select * from file where path like "/mnt/%%"'
      - 'select * from file where path like "/tmp/%%"'
      - 'select * from file where path like "/opt/%%"'
      - 'select * from file where path like "/u01/%%"'
      - 'select * from file where path like "/dev/shm/%%"'
    maps:
      - from: ctime
        to: "@timestamp"
        modifier:
          name: epoch_to_iso

  - name: docker_containers
    type: query
    description: "Get information about docker containers"
    queries:
      - "select * from docker_containers"
    maps:
      - from: created
        to: "@timestamp"
        modifier:
          name: epoch_to_iso

  - name: etc_hosts
    type: query
    description: "Get entries in /etc/hosts"
    queries:
      - "select * from etc_hosts"

  - name: interface_addresses
    type: query
    description: "Get information regarding network interfaces"
    queries:
      - "select * from interface_addresses"

  - name: alf
    type: query
    description: "macOS application layer firewall (ALF) service details"
    queries:
      - "select * from alf"

  - name: last
    type: query
    description: "Get the latest successful logins (/var/log/wtmp)"
    queries:
      - "select * from last"
    maps:
      - from: time
        to: "@timestamp"
        modifier:
          name: epoch_to_iso

  - name: netstat
    type: query
    description: "Get network sockets information (same as command 'netstat')"
    queries:
      - "select pid,processes.path as process_path,processes.cmdline,family,protocol,local_address,remote_address,local_port,remote_port,process_open_sockets.state from process_open_sockets JOIN processes USING (pid)"

  - name: logged_in_users
    type: query
    description: "Get the currently logged-in users"
    queries:
      - "select liu.*, p.name, p.cmdline, p.cwd, p.root from logged_in_users liu, processes p where liu.pid = p.pid"
    maps:
      - from: time
        to: "@timestamp"
        modifier:
          name: epoch_to_iso

  - name: mounts
    type: query
    description: "Get information about the mounted devices"
    queries:
      - "select * from mounts"

  - name: os_version
    type: query
    description: "Get information about the OS destro and version"
    queries:
      - "select * from os_version"

  - name: process_envs
    type: query
    description: "Get each process environment variables"
    queries:
      - 'select pid,cmdline,group_concat(env) as env_variables from (select pid,cmdline,key || "=" || value as env from processes join process_envs using (pid)) group by pid'

  - name: process_open_files
    type: query
    description: "Get opened files for each process"
    queries:
      - "select pid,cmdline,fd,process_open_files.path from process_open_files join processes using (pid)"

  - name: routes
    type: query
    description: "Get routing table entries"
    queries:
      - "select * from routes"

  - name: homebrew_packages
    type: query
    description: "Get installed homebrew packages"
    queries:
      - "select * from homebrew_packages"
    maps:
      - from: install_time
        to: "@timestamp"
        modifier:
          name: epoch_to_iso

  - name: shell_history
    type: query
    description: "Get shell history for all users"
    queries:
      - "select uid,time,command,history_file from users join shell_history using (uid)"
    maps:
      - from: time
        to: "@timestamp"
        modifier:
          name: epoch_to_iso

  - name: ssh_configs
    type: query
    description: "Get SSH client configurations"
    queries:
      - "select * from ssh_configs"

  - name: uptime
    type: query
    description: "Get system uptime"
    queries:
      - "select * from uptime"

  - name: asl
    type: query
    description: "Queries the Apple System Log data structure for system events"
    queries:
      - "select * from asl"
    maps:
      - from: time
        to: "@timestamp"
        modifier:
          name: epoch_to_iso

  - name: wifi_networks
    type: query
    description: "Get known/remembered Wi-Fi networks list"
    queries:
      - "select * from wifi_networks"
    maps:
      - from: last_connected
        to: "@timestamp"
        modifier:
          name: epoch_to_iso

  - name: time_machine
    type: query
    description: "Get TimeMachine backup info"
    queries:
      - "select alias, backup_date, td.destination_id, root_volume_uuid, encryption, consistency_scan_date, bytes_available, bytes_used from time_machine_backups tb join time_machine_destinations td on (td.destination_id=tb.destination_id)"
    maps:
      - from: backup_date
        to: "@timestamp"
        modifier:
          name: epoch_to_iso

  - name: shared_folders
    type: query
    description: "Folders available to others via SMB or AFP"
    queries:
      - "select * from shared_folders"

  - name: keychain_acls
    type: query
    description: "Applications that have ACL entries in the keychain"
    queries:
      - "select * from keychain_acls"

  - name: keychain_items
    type: query
    description: "Generic details about keychain items"
    queries:
      - "select * from keychain_items"
    maps:
      - from: created
        to: "@timestamp"
        modifier:
          name: datetime_to_iso
          parameters:
            input_time_format: "%Y%m%d%H%M%SZ"
      - from: modified
        to: "modified"
        modifier:
          name: datetime_to_iso
          parameters:
            input_time_format: "%Y%m%d%H%M%SZ"

  - name: bad_logins
    type: query
    description: "Get failed logins"
    queries:
      - "SELECT users.username, account_policy_data.failed_login_count, account_policy_data.failed_login_timestamp FROM users INNER JOIN account_policy_data using (uid) WHERE account_policy_data.failed_login_count > 0"
    maps:
      - from: failed_login_timestamp
        to: "@timestamp"
        modifier:
          name: datetime_to_iso
          parameters:
            input_time_format: "%s.%f"

  - name: nfs_shares
    type: query
    description: "Retrieves the current list of mounted drives"
    queries:
      - "select * from nfs_shares"

  - name: launchd
    type: query
    description: "Retrieves all the daemons that will run on boot"
    queries:
      - "select * from launchd"

  - name: logs
    type: collection
    description: "Collect system logs"
    paths:
      - "/var/log/**/*"
      - "/Users/*/.vnc/*.log"
      - "/private/var/log/**/*"

  - name: nginx_access
    type: parse
    description: "Nginx access logs"
    paths:
      - /var/log/nginx/access.*
    regex: '(?P<c_ip>[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}) - (?P<remote_user>[^ ]+) \[(?P<time>[0-9]{2}/[a-zA-Z]{3}/[0-9]{4}:[0-9]{2}:[0-9]{2}:[0-9]{2} \+[0-9]{4})\] "(?P<method>[A-Z]+)?[ ]?(?P<uri>.*?)[ ]?(HTTP/(?P<http_prot>[0-9\.]+))?" (?P<status_code>[0-9]{3}) (?P<body_bytes_sent>[0-9]+) "(?P<referer>.*?)" "(?P<user_agent>.*?)"'
    maps:
      - from: time
        to: "@timestamp"
        modifier:
          name: datetime_to_iso
          parameters:
            input_time_format: "%d/%b/%Y:%H:%M:%S %z"
            output_time_format: "%Y-%m-%d %H:%M:%S"

  - name: auth_log
    type: parse
    description: "Auth logs /var/log/auth.* (Debian based)"
    paths:
      - /var/log/auth.*
    regex: '(?P<time>[A-Z][a-z]{2}[ ]{1,}[0-9]{1,2}[ ]{1,2}[0-9]{1,2}:[0-9]{2}:[0-9]{2}) (?P<hostname>[a-zA-Z0-9_\-]+) (?P<service>[a-zA-Z0-9_\-\]\(\)=\./]+)\[?(?P<pid>[0-9]+)?\]?: (?P<msg>.*)'
    maps:
      - from: time
        to: "@timestamp"
        modifier:
          name: time_without_year_to_iso
          parameters:
            input_time_format: "%b %d %H:%M:%S"
            output_time_format: "%Y-%m-%d %H:%M:%S"

  - name: secure_log
    type: parse
    description: "Secure logs /var/log/secure* (RedHat based)"
    paths:
      - /var/log/secure*
    regex: '(?P<time>[A-Z][a-z]{2}[ ]{1,}[0-9]{1,2}[ ]{1,2}[0-9]{1,2}:[0-9]{2}:[0-9]{2}) (?P<hostname>[a-zA-Z0-9_\-]+) (?P<service>[a-zA-Z0-9_\-\]\(\)=\./]+)\[?(?P<pid>[0-9]+)?\]?: (?P<msg>.*)'
    maps:
      - from: time
        to: "@timestamp"
        modifier:
          name: time_without_year_to_iso
          parameters:
            input_time_format: "%b %d %H:%M:%S"
            output_time_format: "%Y-%m-%d %H:%M:%S"
            local_timezone: true

  - name: syslog_log
    type: parse
    description: "Syslog logs /var/log/syslog* (Debian based)"
    paths:
      - /var/log/syslog*
    regex: '(?P<time>[A-Z][a-z]{2}[ ]{1,}[0-9]{1,2}[ ]{1,2}[0-9]{1,2}:[0-9]{2}:[0-9]{2}) (?P<hostname>[a-zA-Z0-9_\-]+) (?P<service>[a-zA-Z0-9_\-\]\(\)=\./]+)\[?(?P<pid>[0-9]+)?\]?: (?P<msg>.*)'
    maps:
      - from: time
        to: "@timestamp"
        modifier:
          name: time_without_year_to_iso
          parameters:
            input_time_format: "%b %d %H:%M:%S"
            output_time_format: "%Y-%m-%d %H:%M:%S"

  - name: messages_log
    type: parse
    description: "Messages logs /var/log/messages* (RedHat based)"
    paths:
      - /var/log/messages*
    regex: '(?P<time>[A-Z][a-z]{2}[ ]{1,}[0-9]{1,2}[ ]{1,2}[0-9]{1,2}:[0-9]{2}:[0-9]{2}) (?P<hostname>[a-zA-Z0-9_\-]+) (?P<service>[a-zA-Z0-9_\-\]\(\)=\./]+)\[?(?P<pid>[0-9]+)?\]?: (?P<msg>.*)'
    maps:
      - from: time
        to: "@timestamp"
        modifier:
          name: time_without_year_to_iso
          parameters:
            input_time_format: "%b %d %H:%M:%S"
            output_time_format: "%Y-%m-%d %H:%M:%S"
            local_timezone: true

  - name: audit_log
    type: parse
    description: "Audit logs /var/log/audit/audit*"
    paths:
      - /var/log/audit/audit*
    regex: 'type=(?P<type>[A-Za-z0-9_]+) msg=audit\((?P<time>[0-9]+)\.[0-9]+:[0-9]+\): (?P<record>.*)'
    maps:
      - from: time
        to: "@timestamp"
        modifier:
          name: epoch_to_iso
          parameters:
            output_time_format: "%Y-%m-%d %H:%M:%S"

  #------------------------------------------------------------------------------------------------------
  # Additional artifacts from https://github.com/osquery/osquery/blob/master/packs/incident-response.conf
  #------------------------------------------------------------------------------------------------------

  - name: loginwindow
    type: query
    description: "Retrieves all the values for the loginwindow process in the target OSX system"
    queries:
      - select key, subkey, value from plist where path = '/Library/Preferences/com.apple.loginwindow.plist'
      - select key, subkey, value from plist where path = '/Library/Preferences/loginwindow.plist'
      - select username, key, subkey, value from plist p, (select * from users where directory like '/Users/%') u where p.path = u.directory || '/Library/Preferences/com.apple.loginwindow.plist'
      - select username, key, subkey, value from plist p, (select * from users where directory like '/Users/%') u where p.path = u.directory || '/Library/Preferences/loginwindow.plist'

  - name: alf_exceptions
    type: query
    description: Retrieves the exceptions for the Application Layer Firewall in OSX.
    queries:
      - select * from alf_exceptions

  - name: alf_services
    type: query
    description: Retrieves the services for the Application Layer Firewall in OSX.
    queries:
      - select * from alf_services

  - name: alf_explicit_auths
    type: query
    description:
      Retrieves the list of processes with explicit authorization for the
      Application Layer Firewall.
    queries:
      - select * from alf_explicit_auths

  - name: kextstat
    type: query
    description: Retrieves all the information about the current kernel extensions for the target OSX system.
    queries:
      - select * from kernel_extensions

  - name: ip_forwarding
    type: query
    description: Retrieves the current status of IP/IPv6 forwarding.
    queries:
      - select * from system_controls where oid = '4.30.41.1' union select * from system_controls where oid = '4.2.0.1'

  - name: recent_items
    type: query
    description: Retrieves the list of recent items opened in OSX by parsing the plist per user.
    queries:
      - select username, key, value from plist p, (select * from users where directory like '/Users/%') u where p.path = u.directory || '/Library/Preferences/com.apple.recentitems.plist'

  - name: ramdisk
    type: query
    description: Retrieves all the ramdisk currently mounted in the target system.
    queries:
      - select * from block_devices where type = 'Virtual Interface'

  - name: disk_encryption
    type: query
    description: Retrieves the current disk encryption status for the target system.
    queries:
      - select * from disk_encryption

  - name: app_schemes
    type: query
    description: Retrieves the list of application scheme/protocol-based IPC handlers.
    queries:
      - select * from app_schemes

  - name: sandboxes
    type: query
    description: Lists the application bundle that owns a sandbox label.
    queries:
      - select * from sandboxes
